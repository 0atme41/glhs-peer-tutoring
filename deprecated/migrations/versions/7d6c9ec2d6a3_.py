"""empty message

Revision ID: 7d6c9ec2d6a3
Revises: 
Create Date: 2023-05-18 08:26:52.745714

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7d6c9ec2d6a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('account_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('comment_archive',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('c_username', sa.String(), nullable=True),
    sa.Column('c_email', sa.String(), nullable=True),
    sa.Column('timestamp', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['c_username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('c_username', sa.String(), nullable=True),
    sa.Column('c_email', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('c_admin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['c_username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reply_archive',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reply', sa.String(), nullable=True),
    sa.Column('r_username', sa.String(), nullable=True),
    sa.Column('r_email', sa.String(), nullable=True),
    sa.Column('timestamp', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['r_username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('replies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reply', sa.String(), nullable=True),
    sa.Column('r_username', sa.String(), nullable=True),
    sa.Column('r_email', sa.String(), nullable=True),
    sa.Column('r_comment', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('r_admin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['r_comment'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['r_username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('replies')
    op.drop_table('reply_archive')
    op.drop_table('comments')
    op.drop_table('comment_archive')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
